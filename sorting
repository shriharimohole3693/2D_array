selection sort (select from unsoreted array and put it into sorted array)

        int n= a.length;
        for(int i=0;i<n-1;i++){
            int min=i;
            for(int j=i+1;j<n;j++){
                if(a[j] < a[min]){
                min = j;      
                }
            }
               if(min !=i){
                   int temp=a[i];
                    a[i]=a[min];
                    a[min]=temp;
            }
        }

//------------------------------------------------------------------------------------------
Insertion sort (Take one element from usorted array and put it into sorted arrray but at right place).
        for(int i=1;i<size;i++){
            int temp = a[i];
            int j=i-1;
            while(j>=0 && a[j] > temp){
                a[j+1]=a[j];
                j--;
            }
            a[j+1]=temp;
        }

//------------------------------------------------------------------------------------------------
Merge sort( DIVIDE AND CONQURORR)

public class arraylist_2d {
    private static void merge(int[] arr, int low, int mid, int high) {
        List<Integer> temp = new ArrayList<>();
        int left = low;
        int right = mid + 1;
        while (left <= mid && right <= high) {
            if (arr[left] <= arr[right]) {
                temp.add(arr[left]);
                left++;
            } else {
                temp.add(arr[right]);
                right++;
            }
        }
        while (left <= mid) {
            temp.add(arr[left]);
            left++;
        }
        while (right <= high) {
            temp.add(arr[right]);
            right++;
        }
        for (int i = low; i <= high; i++) {
            arr[i] = temp.get(i - low);
        }
    }

    public static void mergeSort(int[] arr, int low, int high) {
        if (low >= high) return;
        int mid = (low + high) / 2;
        mergeSort(arr, 0, mid);
        mergeSort(arr, mid + 1, high);
        merge(arr, low, mid, high);
    }

    public static void main(String[] args) {
        int arr[] = {5, 1, 5, 4, 5, 6};
        int n = arr.length;
        System.out.println("Before sorting array: ");
        for (int i = 0; i < n; i++) {
            System.out.print(arr[i] + " ");
        }
        System.out.println();
        mergeSort(arr, 0, n - 1);
        System.out.println("After sorting array: ");
        for (int i = 0; i < n; i++) {
            System.out.print(arr[i] + " ");
        }
        System.out.println();
    }
}

//------------------------------------------------------------------------------------------

